pipeline {
    agent any
    environment {
        SCANNER_HOME = tool 'sonarqube-tool'
    }

    stages {
        stage('git') {
            steps {
                git branch: 'main', url: 'https://github.com/git-gowtham20/java-project.git'
            }
        }

        stage('build') {
            steps {
                sh 'mvn clean install'
            }
        }

        stage('code analysis') {
            steps {
                withSonarQubeEnv('sonarqube-server') {
                    sh '''$SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=java-project \
                    -Dsonar.java.binaries=. \
                    -Dsonar.projectKey=java-project'''
                }
            }
        }

        stage('docker build') {
            steps {
                sh 'docker build -t java-app2 .'
            }
        }
        stage('container') {
            steps {
                sh 'docker run -itd --name java123 -p 8070:8080 java-app2'
            }
        }
    }
    
    post {
         always {
             slackSend(
                channel: '#devops',
                color: 'good',
                message: "Jenkins build details: ${env.JOB_NAME} Build #${env.BUILD_NUMBER}"
            )
        }
    }
}
